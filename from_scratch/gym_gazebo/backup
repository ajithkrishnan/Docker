RUN git clone https://github.com/opencv/opencv.git
RUN git clone https://github.com/opencv/opencv_contrib.git
RUN cd opencv && mkdir build 
WORKDIR ~/opencv/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D INSTALL_C_EXAMPLES=ON \
      -D INSTALL_PYTHON_EXAMPLES=ON \
      -D WITH_TBB=ON \
      -D WITH_V4L=ON \
      -D WITH_QT=ON \
      -D WITH_OPENGL=ON \
      -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
      -D BUILD_EXAMPLES=ON ..

RUN make -j$(nproc --all)
RUN make install 
RUN /bin/bash -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
RUN ldconfig

#--------------------
# Install ROS-Kinetic-Dependencies
#--------------------
WORKDIR ~/
RUN pip3 install rospkg catkin_pkg
RUN apt-get update && apt-get install -y --no-install-recommends \
    libusb-dev libftdi-dev \
    python3-defusedxml python3-vcstool \
    ros-kinetic-octomap-msgs        \
    ros-kinetic-joy                 \
    ros-kinetic-geodesy             \
    ros-kinetic-octomap-ros         \
    ros-kinetic-control-toolbox     \
    ros-kinetic-pluginlib	       \
    ros-kinetic-trajectory-msgs     \
    ros-kinetic-control-msgs	       \
    ros-kinetic-std-srvs 	       \
    ros-kinetic-nodelet	       \
    ros-kinetic-urdf		       \
    ros-kinetic-rviz		       \
    ros-kinetic-kdl-conversions     \
    ros-kinetic-eigen-conversions   \
    ros-kinetic-tf2-sensor-msgs     \
    ros-kinetic-pcl-ros \
    ros-kinetic-navigation \
    rm -rf /var/lib/apt/lists/*

#--------------------
# Install Sophus
#--------------------
WORKDIR ~/
RUN git clone https://github.com/stonier/sophus -b indigo && \
    cd sophus && mkdir build && cd build && cmake .. && make
# RUN ls -l
RUN cd sophus/build && make install

#--------------------
# Install baselines
#--------------------
WORKDIR ~/

RUN pip3 install baselines netifaces

#--------------------
# Install Gym-Gazebo
#--------------------
WORKDIR ~/

RUN git clone https://github.com/erlerobot/gym-gazebo && \
    cd gym-gazebo && \
    pip3 install -e .
RUN cd gym-gazebo
RUN pip3 install -e .